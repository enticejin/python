{"id":"RgA2","dependencies":[{"name":"D:\\python\\openlayers6.0\\node_modules\\ol\\functions.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\python\\openlayers6.0\\node_modules\\ol\\src\\functions.js","includedInParent":true,"mtime":499162500000},{"name":"D:\\python\\openlayers6.0\\package.json","includedInParent":true,"mtime":1587440149552},{"name":"D:\\python\\openlayers6.0\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1587438657137},{"name":"./array.js","loc":{"line":4,"column":38},"parent":"D:\\python\\openlayers6.0\\node_modules\\ol\\functions.js","resolved":"D:\\python\\openlayers6.0\\node_modules\\ol\\array.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.TRUE=e,exports.FALSE=t,exports.VOID=n,exports.memoizeOne=o;var r=require(\"./array.js\");function e(){return!0}function t(){return!1}function n(){}function o(e){var t,n,o,s=!1;return function(){var u=Array.prototype.slice.call(arguments);return s&&this===o&&(0,r.equals)(u,n)||(s=!0,o=this,n=u,t=e.apply(this,arguments)),t}}"},"sourceMaps":{"js":{"mappings":[{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":13}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":20}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":35}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":43}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":56}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":57}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":64}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":68}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":76}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":81}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":83}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":91}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":97}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":99}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":107}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":112}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":114}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":122}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":133}},{"source":"src/functions.js","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":135}},{"source":"src/functions.js","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":139}},{"source":"src/functions.js","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":141}},{"source":"src/functions.js","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":149}},{"source":"src/functions.js","name":null,"original":{"line":11,"column":6},"generated":{"line":1,"column":163}},{"source":"src/functions.js","name":null,"original":{"line":11,"column":16},"generated":{"line":1,"column":172}},{"source":"src/functions.js","name":null,"original":{"line":12,"column":9},"generated":{"line":1,"column":176}},{"source":"src/functions.js","name":null,"original":{"line":12,"column":9},"generated":{"line":1,"column":183}},{"source":"src/functions.js","name":null,"original":{"line":19,"column":6},"generated":{"line":1,"column":185}},{"source":"src/functions.js","name":null,"original":{"line":19,"column":16},"generated":{"line":1,"column":194}},{"source":"src/functions.js","name":null,"original":{"line":20,"column":9},"generated":{"line":1,"column":198}},{"source":"src/functions.js","name":null,"original":{"line":20,"column":9},"generated":{"line":1,"column":205}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":207}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":16},"generated":{"line":1,"column":216}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":221}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":16},"generated":{"line":1,"column":230}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":27},"generated":{"line":1,"column":232}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":6},"generated":{"line":1,"column":235}},{"source":"src/functions.js","name":null,"original":{"line":43,"column":6},"generated":{"line":1,"column":239}},{"source":"src/functions.js","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":241}},{"source":"src/functions.js","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":243}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":6},"generated":{"line":1,"column":245}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":15},"generated":{"line":1,"column":248}},{"source":"src/functions.js","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":250}},{"source":"src/functions.js","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":257}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":10},"generated":{"line":1,"column":268}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":10},"generated":{"line":1,"column":272}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":21},"generated":{"line":1,"column":274}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":27},"generated":{"line":1,"column":280}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":37},"generated":{"line":1,"column":290}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":43},"generated":{"line":1,"column":296}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":48},"generated":{"line":1,"column":301}},{"source":"src/functions.js","name":null,"original":{"line":58,"column":11},"generated":{"line":1,"column":312}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":9},"generated":{"line":1,"column":319}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":19},"generated":{"line":1,"column":322}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":28},"generated":{"line":1,"column":329}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":41},"generated":{"line":1,"column":333}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":53},"generated":{"line":1,"column":335}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":53},"generated":{"line":1,"column":337}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":53},"generated":{"line":1,"column":345}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":63},"generated":{"line":1,"column":347}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":352}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":15},"generated":{"line":1,"column":355}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":6},"generated":{"line":1,"column":357}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":17},"generated":{"line":1,"column":359}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":364}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":17},"generated":{"line":1,"column":366}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":6},"generated":{"line":1,"column":368}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":19},"generated":{"line":1,"column":370}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":22},"generated":{"line":1,"column":372}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":28},"generated":{"line":1,"column":378}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":34},"generated":{"line":1,"column":383}},{"source":"src/functions.js","name":null,"original":{"line":58,"column":11},"generated":{"line":1,"column":395}}],"sources":{"src/functions.js":"/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function() {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"6267974c28590d661f0a92f5d6c8c17c","cacheData":{"env":{}}}